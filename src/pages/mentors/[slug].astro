---
import UnivationLayout from "@/layouts/univation-layout.astro";
import UnivationHeader from "@/components/layout/univation-header.astro";
import UnivationFooter from "@/components/layout/univation-footer.astro";
import { Button } from "@/components/ui/button";
import { Icon } from 'astro-icon/components';
import YouTubePlayer from "@/components/YouTubePlayer.astro";
import MentorCard from "@/components/MentorCard";

export function getStaticPaths() {
  return [
    { params: { slug: "jane-smith" } },
    { params: { slug: "john-doe" } },
    { params: { slug: "emily-brown" } },
  ];
}

const { slug } = Astro.params;

const mentorData = {
  "jane-smith": {
    name: "Dr. Jane Smith",
    field: "Computer Science",
    university: "MIT",
    image: "https://randomuser.me/api/portraits/women/1.jpg",
    bio: "Dr. Jane Smith is a renowned expert in Artificial Intelligence and Machine Learning.",
    expertise: ["Artificial Intelligence", "Machine Learning", "Data Science"],
    birthYear: 1985,
    lifePath: [
      { stage: "Early Career", description: "Started as a research assistant at Stanford AI Lab", year: 2010, icon: "mdi:school" },
      { stage: "Industry Experience", description: "Joined Google as a Machine Learning Engineer", year: 2015, icon: "mdi:briefcase" },
      { stage: "Personal Growth", description: "Took a year-long sabbatical to travel and learn meditation", year: 2018, icon: "mdi:heart" },
      { stage: "Financial Milestone", description: "Successfully exited a tech startup, securing financial independence", year: 2019, icon: "mdi:cash" },
      { stage: "Academic Leadership", description: "Became Associate Professor at MIT", year: 2020, icon: "mdi:teach" },
    ],
    speeches: [
      { title: "The Future of AI", year: 2022, youtubeId: "Q_0-1f-40sM", default: true, description: "Explore the latest advancements and future possibilities in the field of Artificial Intelligence." },
      { title: "Ethics in Machine Learning", year: 2021, youtubeId: "dQw4w9WgXcQ", description: "Discuss the ethical implications and responsible use of Machine Learning technologies." },
    ],
  },
  "john-doe": {
    name: "Prof. John Doe",
    field: "Business Administration",
    university: "Harvard",
    image: "https://randomuser.me/api/portraits/men/1.jpg",
    bio: "Prof. John Doe is a leading authority in Business Strategy and Entrepreneurship.",
    expertise: ["Business Strategy", "Entrepreneurship", "Marketing"],
    birthYear: 1978,
    lifePath: [
      { stage: "Early Career", description: "Started as a consultant at McKinsey & Company", year: 2003, icon: "mdi:school" },
      { stage: "Entrepreneurship", description: "Founded and led a successful startup", year: 2010, icon: "mdi:briefcase" },
      { stage: "Life-Changing Event", description: "Survived a near-death experience, shifting focus to work-life balance", year: 2013, icon: "mdi:heart" },
      { stage: "Financial Success", description: "Sold startup for $50 million, became angel investor", year: 2014, icon: "mdi:cash" },
      { stage: "Academic Leadership", description: "Became Professor at Harvard Business School", year: 2015, icon: "mdi:teach" },
    ],
    speeches: [
      { title: "Entrepreneurship in the Digital Age", year: 2023, youtubeId: "Q_0-1f-40sM", description: "Explore the opportunities and challenges of entrepreneurship in the digital era." },
      { title: "Sustainable Business Practices", year: 2022, youtubeId: "Urgv_yIIoFI", description: "Discuss the importance of sustainable business practices and their impact on the environment and society." },
    ],
  },
  "emily-brown": {
    name: "Dr. Emily Brown",
    field: "Engineering",
    university: "Stanford",
    image: "https://randomuser.me/api/portraits/women/2.jpg",
    bio: "Dr. Emily Brown is a pioneering researcher in Sustainable Engineering and Green Technologies.",
    expertise: ["Sustainable Engineering", "Green Technologies", "Environmental Science"],
    birthYear: 1982,
    lifePath: [
      { stage: "Early Career", description: "Started as a researcher at the National Renewable Energy Laboratory", year: 2007, icon: "mdi:school" },
      { stage: "Industry Experience", description: "Joined a leading green tech company as a Senior Engineer", year: 2012, icon: "mdi:briefcase" },
      { stage: "Personal Achievement", description: "Completed a solo sailing trip around the world, promoting ocean conservation", year: 2015, icon: "mdi:sail-boat" },
      { stage: "Financial Milestone", description: "Received a $2 million grant for innovative sustainable energy research", year: 2016, icon: "mdi:cash" },
      { stage: "Academic Leadership", description: "Became Associate Professor at Stanford University", year: 2017, icon: "mdi:teach" },
    ],
    speeches: [
      { title: "Green Technologies for a Sustainable Future", year: 2023, youtubeId: "1Qu4nVzD2mQ", description: "Explore the role of green technologies in creating a sustainable future." },
      { title: "Innovations in Renewable Energy", year: 2022, youtubeId: "dQw4w9WgXcQ", description: "Discuss the latest innovations and advancements in renewable energy technologies." },
    ],
  },
};

const mentor = mentorData[slug] || null;

// Simulated related mentors
const relatedMentors = [
  { name: "Prof. John Doe", field: "Business Administration", slug: "john-doe", imageUrl: "https://randomuser.me/api/portraits/men/1.jpg" },
  { name: "Dr. Emily Brown", field: "Engineering", slug: "emily-brown", imageUrl: "https://randomuser.me/api/portraits/women/2.jpg" },
];

function getRandomBackgroundImage() {
  const images = [
    "https://source.unsplash.com/1600x900/?university,lecture",
    "https://source.unsplash.com/1600x900/?classroom,education",
    "https://source.unsplash.com/1600x900/?library,study"
  ];
  return images[Math.floor(Math.random() * images.length)];
}
---

<UnivationLayout title={mentor ? `${mentor.name} - Mentor Profile` : "Mentor Not Found"}>
  <div class="univation-blue-background ">
    <UnivationHeader />
    
    <main class="container  mx-auto px-4 ">
      {mentor ? (
        <>
          <div class="max-w-[900px] mx-auto z-0">
            <div class="hero-container relative max-w-[900px] mx-auto mb-8">
              <div class="hero" style={`background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url('${getRandomBackgroundImage()}');`}>
                <div class="hero-overlay"></div>
                <div class="hero-content">
                </div>
              </div>
              <a href="/mentors" class="back-button" id="back-to-mentors">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
                  <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd" />
                </svg>
                Back
              </a>
            </div>
          </div>
          
          <div class="main-content max-w-[900px] mx-auto mt-[-100px] ">
            <!-- Mentor Info -->
            <div class="content-wrapper mb-8">
              <div class="flex items-center justify-between mb-6">
                <div class="flex items-center space-x-6">
                  <img src={mentor.image} alt={mentor.name} class="mentor-image" />
                  <div>
                    <h2 class="text-2xl font-bold text-black">{mentor.name}</h2>
                    <p class="text-lg text-gray-600">{mentor.field}</p>
                  </div>
                </div>
                <div class="flex items-center space-x-4 text-black">
                  <Button variant="primary" size="sm">Book Mentor</Button>
                  <div class="tag-white inline-flex items-center justify-center space-x-2 px-4 py-2 rounded-full border border-gray-200 hover:bg-gray-100 hover:-translate-y-1 transition-all duration-300">
                    <img src="/path/to/university-logo.png" alt="University Logo" class="w-6 h-6 object-contain" />
                    <span class="text-sm font-semibold text-gray-800">{mentor.university}</span>
                  </div>
                </div>
              </div>
              <div class="flex items-center justify-between mb-6">
                <ul class="tag-list">
                  
                  {mentor.expertise.map(area => <li class="tag-black inline-flex items-center justify-center space-x-2 px-4 py-2 rounded-full">{area}</li>)}
                </ul>
              </div>
              <p class="text-gray-700">{mentor.bio}</p>
            </div>

            <!-- Life Path -->
            <div class="content-wrapper mb-8 text-black">
              <h2 class="text-2xl font-bold mb-4">Life Path</h2>
              <ul class="life-path-list">
                {mentor.lifePath.map((stage, index) => (
                  <li class="mb-8 relative">
                    <div class="flex items-center">
                      <div class="w-10 h-10 bg-blue-500 rounded-full mr-4 flex items-center justify-center text-white">
                        <Icon name={stage.icon} class="w-6 h-6" />
                      </div>
                      <div>
                        <strong class="text-lg">{stage.stage}</strong>
                        <span class="text-sm text-gray-500 ml-2">Age: {stage.year - mentor.birthYear}</span>
                      </div>
                    </div>
                    <p class="ml-14 text-gray-700">{stage.description}</p>
                    <p class="ml-14 text-sm text-gray-500">{stage.year}</p>
                  </li>
                ))}
              </ul>
            </div>

            <!-- Speeches -->
            <div class="content-wrapper mb-8 text-black">
              <h2 class="text-2xl font-bold mb-6">All Speeches</h2>
              <div class="youtube-player-wrapper mb-6">
                <YouTubePlayer videos={mentor.speeches} />
              </div>
              <div class="grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 gap-4 mb-6">
                {mentor.speeches.map((speech, index) => (
                  <div
                    class={`speech-card cursor-pointer transition-all duration-300 ${index === 0 ? 'active' : ''}`}
                    data-index={index}
                  >
                    <div class="relative rounded-lg overflow-hidden">
                      <img
                        src={`https://img.youtube.com/vi/${speech.youtubeId}/mqdefault.jpg`}
                        alt={`Thumbnail for ${speech.title}`}
                        class="w-full h-32 object-cover rounded-lg"
                      />
                    </div>
                    <h3 class="text-sm font-semibold mt-2 line-clamp-2">{speech.title}</h3>
                  </div>
                ))}
              </div>
              <div id="active-speech-info" class="bg-[#f5f5f5] rounded-lg p-6 shadow-sm">
                <h3 class="text-xl font-bold mb-3 text-gray-800">{mentor.speeches[0].title}</h3>
                <p class="text-base text-gray-600 leading-relaxed">{mentor.speeches[0].description || "No description available."}</p>
              </div>
            </div>

            <!-- Related Mentors -->
            <div class="content-wrapper mt-12 text-black">
              <h2 class="text-2xl font-semibold mb-8">Related Mentors</h2>
              <div >
                <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
                  {(relatedMentors || []).map((mentor) => (
                    <a href={`/mentors/${mentor.slug}`}>
                      <MentorCard
                        name={mentor.name}
                        title={mentor.field}
                        imageUrl={mentor.imageUrl}
                        variant="v2"
                      />
                    </a>
                  ))}
                </div>
              </div>
            </div>
          </div>
        </>
      ) : (
        <div class="content-wrapper max-w-[900px] mx-auto">
          <h1>Mentor Not Found</h1>
          <p>Sorry, we couldn't find a mentor with the slug: {slug}</p>
          <a href="/mentors" class="back-button">Back to Mentors</a>
        </div>
      )}
    </main>
    
    <UnivationFooter />
  </div>
</UnivationLayout>

<script define:vars={{ speeches: mentor?.speeches || [] }}>
  document.addEventListener('DOMContentLoaded', () => {
    const speechCards = document.querySelectorAll('.speech-card');
    const activeSpeechInfo = document.querySelector('#active-speech-info');

    function updateActiveCard(index) {
      speechCards.forEach((card, i) => {
        if (i === index) {
          card.classList.add('active');
        } else {
          card.classList.remove('active');
        }
      });

      // Update active speech info
      if (speeches[index]) {
        const activeSpeech = speeches[index];
        activeSpeechInfo.innerHTML = `
          <h3 class="text-xl font-bold mb-3 text-gray-800">${activeSpeech.title}</h3>
          <p class="text-base text-gray-600 leading-relaxed">${activeSpeech.description || "No description available."}</p>
        `;
      }
    }

    speechCards.forEach(card => {
      card.addEventListener('click', () => {
        const index = parseInt(card.getAttribute('data-index'), 10);
        if (!isNaN(index)) {
          const event = new CustomEvent('change-video', { detail: { index } });
          window.dispatchEvent(event);
          updateActiveCard(index);
        }
      });
    });

    // Set the first speech as active initially
    if (speechCards.length > 0) {
      updateActiveCard(0);
    }
  });
</script>

<style>
  .univation-blue-background {
    background-color: #0077b6;
    min-height: 100vh;
    padding-bottom: 2rem;
    z-index: -1;
  }

  .hero-container {
    position: relative;
    left: 0;
    right: 0;
    max-width: 900px;
    width: 100%;
    z-index: 0;
    height: 400px;
  }

  .hero {
    border-radius: 20px 20px 0 0;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-size: cover;
    background-position: center;
    overflow: hidden;
  }

  .hero-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(to bottom, rgba(0,0,0,0.3) 0%, rgba(0,0,0,0.6) 100%);
    z-index: 1;
  }

  .hero-content {
    position: relative;
    z-index: 2;
    text-align: center;
    color: white;
  }

  .mentor-image {
    width: 100px;
    height: 100px;
    border-radius: 50%;
    border: 3px solid white;
  }

  .content-wrapper {
    background-color: white;
    border-radius: 20px;
    padding: 2rem;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    position: relative;
    z-index: 20;
  }

  .back-button {
    position: absolute;
    bottom: 1rem;
    left: 1rem;
    display: inline-flex;
    align-items: center;
    padding: 0.5rem 1rem;
    background-color: rgba(0, 0, 0, 0.5);
    color: white;
    text-decoration: none;
    border-radius: 20px;
    transition: background-color 0.3s ease;
    font-weight: 500;
    z-index: 30;
    backdrop-filter: blur(10px);
  }

  .back-button:hover {
    background-color: rgba(0, 0, 0, 0.8);
  }

  .tag-list {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    list-style-type: none;
    padding: 0;
  }

  .tag {
    background-color: #48cae4;
    color: white;
    padding: 0.3rem 0.6rem;
    border-radius: 20px;
    font-size: 0.9rem;
  }

  .education-list, .publication-list {
    list-style-type: none;
    padding: 0;
  }

  .tag-black {
    background-color: black;
    color: white;
  }

  .tag-white {
    background-color: white;
    color: #333;
  }

  .tab-button {
    @apply px-4 py-2 text-sm font-medium text-gray-500 hover:text-gray-700 hover:border-gray-300 focus:outline-none focus:text-gray-700 focus:border-gray-300;
  }

  .tab-button.active {
    @apply border-b-2 border-blue-500 text-blue-600;
  }

  .tab-content {
    @apply py-4;
  }

  @media (max-width: 768px) {
    .hero-container {
      padding-top: 75%; /* Adjust for mobile */
    }
  }

  .main-content {
    max-width: 900px;
    margin-left: auto;
    margin-right: auto;
    position: relative;
    z-index: 10;
    border-top-left-radius: 20px;
    border-top-right-radius: 20px;
  }

  .life-path-list {
    list-style-type: none;
    padding: 0;
    position: relative;
  }

  .life-path-list::before {
    content: '';
    position: absolute;
    left: 20px;
    top: 0;
    bottom: 0;
    width: 2px;
    background-color: #e5e7eb;
  }

  .life-path-list li::before {
    content: '';
    position: absolute;
    left: 19px;
    top: 40px;
    bottom: -8px;
    width: 4px;
    background-color: #3b82f6;
    height:100%;

  }

  .life-path-list li:last-child::before {
    display: none;
  }

  .life-path-list li {
    position: relative;
  }

  .speech-card {
    transition: transform 0.3s ease;
  }

  .speech-card:hover {
    transform: translateY(-4px);
  }

  .speech-card.active .relative {
    outline: 4px solid #3b82f6;
  }

  #active-speech-info {
    transition: all 0.3s ease;
  }

  .youtube-player-wrapper {
    position: relative;
    width: 100%;
    padding-top: 56.25%; /* 16:9 aspect ratio */
  }

  .youtube-player-wrapper :global(.youtube-player-container) {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
</style>
